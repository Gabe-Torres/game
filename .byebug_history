continue
nil.to_i
((aggregate.correct.to_f / aggregate.attempts) * 100).to_i
(aggregate.correct.to_f / aggregate.attempts) * 100
( (aggregate.correct.to_f / aggregate.attempts) * 100)).to_i
_.to_i
(aggregate.correct.to_f / aggregate.attempts) * 100
aggregate.correct.to_f / aggregate.attempts
continue
@active_problem_groups.first.fifth
@active_problem_groups.first.fourth
@active_problem_groups.first.third
@active_problem_groups.first.second
@active_problem_groups.first.first
@active_problem_groups.first.class
@active_problem_groups.first
@active_problem_groups.class
@active_problem_groups
exit
@aggregates.count
@aggregates.class
@aggregates.first
@aggregates
@aggregates.count.first
@aggregates.count
@aggregates
continue
c
response_input
c
response_input
c
response_input
c
response_input
c
params
params[:started_at]
params[:response] 
params[:problem_id]
params
c
params.require(:game).permit(:problem_id, :start_time, :response)
params.require(:game)
params
continue
params
